//Copyright (c) 2009 Emil Dotchevski and Reverge Studios, Inc.

//Distributed under the Boost Software License, Version 1.0. (See accompanying
//file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_LA_CUSTOM_VECTOR_MINUS_2_HPP_INCLUDED
#define BOOST_LA_CUSTOM_VECTOR_MINUS_2_HPP_INCLUDED

//This file was generated by a program. Do not edit manually.

#include <boost/la/config.hpp>
#include <boost/la/deduce_vector.hpp>
#include <boost/utility/enable_if.hpp>

namespace
boost
    {
    namespace
    la
        {
        template <class A>
        BOOST_LA_INLINE_OPERATIONS
        typename lazy_enable_if_c<
            vector_traits<A>::dim==2,
            deduce_vector<A> >::type
        operator-( A const & a )
            {
            typedef typename deduce_vector<A>::type R;
            R r;
            vector_traits<R>::template w<0>(r)=-vector_traits<A>::template r<0>(a);
            vector_traits<R>::template w<1>(r)=-vector_traits<A>::template r<1>(a);
            return r;
            }

        namespace
        la_detail
            {
            template <int D>
            struct vector_minus_defined;

            template <>
            struct
            vector_minus_defined<2>
                {
                static bool const value=true;
                };
            }
        }
    }

#endif
