//Copyright (c) 2009 Emil Dotchevski and Reverge Studios, Inc.

//Distributed under the Boost Software License, Version 1.0. (See accompanying
//file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifndef BOOST_LA_CUSTOM_MATRIX_MAKE_1_4_HPP_INCLUDED
#define BOOST_LA_CUSTOM_MATRIX_MAKE_1_4_HPP_INCLUDED

//This file was generated by a program. Do not edit manually.

#include <boost/la/config.hpp>
#include <boost/la/matrix_traits.hpp>
#include <boost/utility/enable_if.hpp>

namespace
boost
    {
    namespace
    la
        {
        template <class R,class A>
        BOOST_LA_INLINE_OPERATIONS
        typename enable_if_c<
            matrix_traits<R>::rows==1 && matrix_traits<A>::rows==1 &&
            matrix_traits<R>::cols==4 && matrix_traits<A>::cols==4,
            R>::type
        make( A const & a )
            {
            R r;
            matrix_traits<R>::template w<0,0>(r)=matrix_traits<A>::template r<0,0>(a);
            matrix_traits<R>::template w<0,1>(r)=matrix_traits<A>::template r<0,1>(a);
            matrix_traits<R>::template w<0,2>(r)=matrix_traits<A>::template r<0,2>(a);
            matrix_traits<R>::template w<0,3>(r)=matrix_traits<A>::template r<0,3>(a);
            return r;
            }

        namespace
        la_detail
            {
            template <int M,int N>
            struct matrix_make_defined;

            template <>
            struct
            matrix_make_defined<1,4>
                {
                static bool const value=true;
                };
            }
        }
    }

#endif
